FROM rust:1.86 AS builder

WORKDIR /src
COPY . /src

RUN cargo install --path .

FROM debian:bookworm-slim

ARG USER
ARG PASS
ARG SOURCE_DIR
ARG TEMPLATE_DIR
ARG SERVER_PASSWORD
ARG RDBMS_UID
ARG RDBMS_GID

# Install dependencies and clean up
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    sudo rsync openssh-server sshpass systemd && \
    rm -rf /var/lib/apt/lists/* && \
    mkdir -p /var/run/sshd

# Create an administrative user with uid of 1001
RUN useradd -m -u ${RDBMS_UID} -d /home/${USER} -s /bin/bash ${USER} && \
    echo "${USER}:${PASS}" | chpasswd && \
    usermod -aG sudo ${USER} && \
    echo "${USER} ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/${USER} && \
    printf "\nPasswordAuthentication yes\nPermitRootLogin no\n" >> /etc/ssh/sshd_config

COPY --chown=${USER}:${USER} --from=builder /usr/local/cargo/bin/rsync_csv /usr/local/bin/rsync_csv

# Create source and template directories
RUN mkdir -p ${SOURCE_DIR} ${TEMPLATE_DIR} && \
    chown -R ${USER}:${USER} ${SOURCE_DIR} ${TEMPLATE_DIR}

# Copy templates and bash script
COPY --chown=${USER}:${USER} ./test/templates/* ${TEMPLATE_DIR}/
COPY --chown=${USER}:${USER} ./test/bash/copy_ssh_key.sh /
RUN chmod +x /copy_ssh_key.sh

# Update bash script with sed
RUN sed -i "s/\"password\"/${SERVER_PASSWORD}/g" /copy_ssh_key.sh

# Create ssh authorized_keys file for administrative user
RUN mkdir -p /home/${USER}/.ssh && \
    touch /home/${USER}/.ssh/authorized_keys && \
    chmod 600 /home/${USER}/.ssh/authorized_keys && \
    chown -R ${USER}:${USER} /home/${USER}/.ssh

# Create sftpchroot and rsyncusers groups
RUN groupadd sftpchroot && \
    groupadd rsyncusers

EXPOSE 22
CMD ["bash", "-c", "sudo /usr/sbin/sshd -D & /copy_ssh_key.sh & rsync_csv"]